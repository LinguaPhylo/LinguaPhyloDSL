/**
 * generated by Xtext 2.25.0
 */
package lphy.dsl.lPhy.impl;

import lphy.dsl.lPhy.*;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class LPhyFactoryImpl extends EFactoryImpl implements LPhyFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static LPhyFactory init()
  {
    try
    {
      LPhyFactory theLPhyFactory = (LPhyFactory)EPackage.Registry.INSTANCE.getEFactory(LPhyPackage.eNS_URI);
      if (theLPhyFactory != null)
      {
        return theLPhyFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new LPhyFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public LPhyFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case LPhyPackage.LPHY_MODEL: return createLPhyModel();
      case LPhyPackage.LAW_NODE: return createLawNode();
      case LPhyPackage.INSTANTIATED_DISTRIBUTION: return createInstantiatedDistribution();
      case LPhyPackage.ARGUMENT: return createArgument();
      case LPhyPackage.VARIABLE: return createVariable();
      case LPhyPackage.RANGE: return createRange();
      case LPhyPackage.DISTRIBUTION_TYPE_SPECIFICATION: return createDistributionTypeSpecification();
      case LPhyPackage.LPHY_DIST: return createLPhyDist();
      case LPhyPackage.JAVA_DIST: return createJavaDist();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LPhyModel createLPhyModel()
  {
    LPhyModelImpl lPhyModel = new LPhyModelImpl();
    return lPhyModel;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LawNode createLawNode()
  {
    LawNodeImpl lawNode = new LawNodeImpl();
    return lawNode;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public InstantiatedDistribution createInstantiatedDistribution()
  {
    InstantiatedDistributionImpl instantiatedDistribution = new InstantiatedDistributionImpl();
    return instantiatedDistribution;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Argument createArgument()
  {
    ArgumentImpl argument = new ArgumentImpl();
    return argument;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Variable createVariable()
  {
    VariableImpl variable = new VariableImpl();
    return variable;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Range createRange()
  {
    RangeImpl range = new RangeImpl();
    return range;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DistributionTypeSpecification createDistributionTypeSpecification()
  {
    DistributionTypeSpecificationImpl distributionTypeSpecification = new DistributionTypeSpecificationImpl();
    return distributionTypeSpecification;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LPhyDist createLPhyDist()
  {
    LPhyDistImpl lPhyDist = new LPhyDistImpl();
    return lPhyDist;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public JavaDist createJavaDist()
  {
    JavaDistImpl javaDist = new JavaDistImpl();
    return javaDist;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LPhyPackage getLPhyPackage()
  {
    return (LPhyPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static LPhyPackage getPackage()
  {
    return LPhyPackage.eINSTANCE;
  }

} //LPhyFactoryImpl
